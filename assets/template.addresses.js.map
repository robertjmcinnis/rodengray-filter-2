{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./scripts/templates/customers/addresses.js","webpack:///../node_modules/@shopify/theme-addresses/theme-addresses.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","6","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","p","jsonpArray","window","shopifySlateJsonp","oldJsonpFunction","slice","_jquery2","obj","_themeAddresses","$newAddressForm","CountryProvinceSelector","hideElement","each","formId","this","countrySelector","provinceSelector","containerSelector","on","toggleClass","$el","confirmMessage","confirm","Shopify","postLink","parameters","_method","95","e","countryOptions","TypeError","getOption","nodeElement","querySelector","buildProvince","countryNodeElement","provinceNodeElement","selectedValue","selectedOption","provinces","JSON","parse","getAttribute","options","defaultValue","forEach","option","optionElement","document","createElement","textContent","appendChild","__webpack_exports__","build","innerHTML","onCountryChange","addEventListener","event","target","onProvinceChange"],"mappings":"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","file":"template.addresses.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t6: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"shopifySlateJsonp\"] = window[\"shopifySlateJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([94,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","'use strict';\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _themeAddresses = require('@shopify/theme-addresses');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Customer Addresses Script\n * ------------------------------------------------------------------------------\n * A file that contains scripts highly couple code to the Customer Addresses\n * template.\n *\n * @namespace customerAddresses\n */\n\nvar $newAddressForm = (0, _jquery2.default)('#AddressNewForm');\n\nif ($newAddressForm.length) {\n  // Initialize observers on address selectors, defined in shopify_common.js\n  if (_themeAddresses.CountryProvinceSelector) {\n    new _themeAddresses.CountryProvinceSelector('AddressCountryNew', 'AddressProvinceNew', {\n      hideElement: 'AddressProvinceContainerNew'\n    });\n  }\n\n  // Initialize each edit form's country/province selector\n  (0, _jquery2.default)('.address-country-option').each(function () {\n    var formId = (0, _jquery2.default)(this).data('form-id');\n    var countrySelector = 'AddressCountry_' + formId;\n    var provinceSelector = 'AddressProvince_' + formId;\n    var containerSelector = 'AddressProvinceContainer_' + formId;\n\n    new _themeAddresses.CountryProvinceSelector(countrySelector, provinceSelector, {\n      hideElement: containerSelector\n    });\n  });\n\n  // Toggle new/edit address forms\n  (0, _jquery2.default)('.address-new-toggle').on('click', function () {\n    $newAddressForm.toggleClass('hide');\n  });\n\n  (0, _jquery2.default)('.address-edit-toggle').on('click', function () {\n    var formId = (0, _jquery2.default)(this).data('form-id');\n    (0, _jquery2.default)('#EditAddress_' + formId).toggleClass('hide');\n  });\n\n  (0, _jquery2.default)('.address-delete').on('click', function () {\n    var $el = (0, _jquery2.default)(this);\n    var formId = $el.data('form-id');\n    var confirmMessage = $el.data('confirm-message');\n    if (window.confirm(confirmMessage || 'Are you sure you wish to delete this address?')) {\n      Shopify.postLink('/account/addresses/' + formId, {\n        parameters: { _method: 'delete' }\n      });\n    }\n  });\n}","/**\n * CountryProvinceSelector Constructor\n * @param {String} countryOptions the country options in html string\n */\nexport function CountryProvinceSelector(countryOptions) {\n  if (typeof countryOptions !== 'string') {\n    throw new TypeError(countryOptions + ' is not a string.');\n  }\n  this.countryOptions = countryOptions;\n}\n\n/**\n * Builds the country and province selector with the given node element\n * @param {Node} countryNodeElement The <select> element for country\n * @param {Node} provinceNodeElement The <select> element for province\n * @param {Object} options Additional settings available\n * @param {CountryProvinceSelector~onCountryChange} options.onCountryChange callback after a country `change` event\n * @param {CountryProvinceSelector~onProvinceChange} options.onProvinceChange callback after a province `change` event\n */\nCountryProvinceSelector.prototype.build = function (countryNodeElement, provinceNodeElement, options) {\n  if (typeof countryNodeElement !== 'object') {\n    throw new TypeError(countryNodeElement + ' is not a object.');\n  }\n\n  if (typeof provinceNodeElement !== 'object') {\n    throw new TypeError(provinceNodeElement + ' is not a object.');\n  }\n\n  var defaultValue = countryNodeElement.getAttribute('data-default');\n  options = options || {}\n\n  countryNodeElement.innerHTML = this.countryOptions;\n  countryNodeElement.value = defaultValue;\n\n  if (defaultValue && getOption(countryNodeElement, defaultValue)) {\n    var provinces = buildProvince(countryNodeElement, provinceNodeElement, defaultValue);\n    options.onCountryChange && options.onCountryChange(provinces, provinceNodeElement, countryNodeElement);\n  }\n\n  // Listen for value change on the country select\n  countryNodeElement.addEventListener('change', function (event) {\n    var target = event.target;\n    var selectedValue = target.value;\n    \n    var provinces = buildProvince(target, provinceNodeElement, selectedValue);\n    options.onCountryChange && options.onCountryChange(provinces, provinceNodeElement, countryNodeElement);\n  });\n\n  options.onProvinceChange && provinceNodeElement.addEventListener('change', options.onProvinceChange);\n}\n\n/**\n * This callback is called after a user interacted with a country `<select>`\n * @callback CountryProvinceSelector~onCountryChange\n * @param {array} provinces the parsed provinces\n * @param {Node} provinceNodeElement province `<select>` element\n * @param {Node} countryNodeElement country `<select>` element\n */\n\n /**\n * This callback is called after a user interacted with a province `<select>`\n * @callback CountryProvinceSelector~onProvinceChange\n * @param {Event} event the province selector `change` event object\n */\n\n/**\n * Returns the <option> with the specified value from the\n * given node element\n * A null is returned if no such <option> is found\n */\nfunction getOption(nodeElement, value) {\n  return nodeElement.querySelector('option[value=\"' + value +'\"]')\n}\n\n/**\n * Builds the options for province selector\n */\nfunction buildOptions (provinceNodeElement, provinces) {\n  var defaultValue = provinceNodeElement.getAttribute('data-default');\n\n  provinces.forEach(function (option) {\n    var optionElement = document.createElement('option');\n    optionElement.value = option[0];\n    optionElement.textContent = option[1];\n\n    provinceNodeElement.appendChild(optionElement);\n  })\n\n  if (defaultValue && getOption(provinceNodeElement, defaultValue)) {\n    provinceNodeElement.value = defaultValue;\n  }\n}\n\n/**\n * Builds the province selector\n */\nfunction buildProvince (countryNodeElement, provinceNodeElement, selectedValue) {\n  var selectedOption = getOption(countryNodeElement, selectedValue);\n  var provinces = JSON.parse(selectedOption.getAttribute('data-provinces'));\n\n  provinceNodeElement.options.length = 0;\n\n  if (provinces.length) {\n    buildOptions(provinceNodeElement, provinces)\n  }\n\n  return provinces;\n}\n"],"sourceRoot":""}